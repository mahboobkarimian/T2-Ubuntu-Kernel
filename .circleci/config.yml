version: 2.1

jobs:
  lint:
    docker:
      - image: ubuntu:22.04
    steps:
      - checkout
      - run:
          name: Set up Python 3.9
          command: |
            apt-get update
            apt-get install -y python3.9
      - run:
          name: Install dependencies
          command: |
            python3.9 -m pip install --upgrade pip
            pip install yamllint
            apt-get install -y shellcheck bash
      - run:
          name: Analysing the code
          command: |
            yamllint .
            shellcheck ./*.sh

  build:
    docker:
      - image: ubuntu:22.04
    steps:
      - run:
          name: Free up disk space for the CI
          command: |
            echo "CPU threads: $(nproc --all)"
            grep 'model name' /proc/cpuinfo | uniq

      - checkout

      - run:
          name: Build script
          command: |
            mkdir /tmp/artifacts
            apt-get update
            apt-get install ca-certificates curl gnupg -y
            install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            chmod a+r /etc/apt/keyrings/docker.gpg
            echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
            apt-get update
            apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
            docker pull ubuntu:23.04
            docker run \
              -t \
              -v "$(pwd)":/repo \
              ubuntu:23.04 \
              /bin/bash -c 'cd /repo && \
              apt-get update && \
              apt-get install -y lsb-release && \
              mkdir /tmp/artifacts && \
              ./build.sh && mkdir /repo/debs && \
              cp -r /tmp/artifacts/* /repo/debs'
            cp -r "$(pwd)"/debs/* /tmp/artifacts

            echo Built finished
            cd /tmp/artifacts
            ls -l
            dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz
            ls -l

      - store_artifacts:
          path: /tmp/artifacts/*
